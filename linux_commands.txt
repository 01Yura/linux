cd директория - переместиться в директорию
cd -- - вернуться в предыдущую директорию 
cd ~ - перейти в домашний каталог (можно просто cd без всего)
ls -la - отобразить содержимое директории с правами (-l) и скрытыми файлами (-a) 
ls -li - отобразить номера inode (файловый дескриптор=inode)
cat файл - отобразить содержимое файла
touch файл - создать файл (по факту сменить время)
less файл - просмотреть файл с возможностью листать
mrdir директория - создать директорию
rm -r директория - удалить даже не пустую директорию
systemctl status процесс - показать статус процесса
systemctl stop/start процесс- запустить/остановить процесс

/etc/passwd - здесь хранится инфа о пользователях (тут можно сменить домашний каталог)
/etc/group - инфа о группах
/etc/shadow - инфа о паролях

id имя_пользоватля - инфа о uid, gid
аутентификация - проверка существования пользователя и пароля
авторизация - проверка ваших прав на какие-либо действия
adduser имя - добавть юзера
adduser существующий_юзер группа - добавить юзера в группу
sha256 - secure hash algoritm это хэш функция
chmod u/g/o-/+r/w/x файл - изменить права user group or other + or - read write executable, например 
    chmod o+x файл, если не указать никого то права изменятся у пользователя и у группы


> файл- стандартный поток вывода в файл (работает справа налево)
2> файл - стандартный поток ошибок файл
>> файл - перезаписать файл

Данные хранятся на диске. Информация о том где именно на диске хранятся эти данные + права + размер + время создания файла (записи информации на диск  и т.д. хранится в айноде. И эта айнода имеет назавание для нашего удобства - имя файла. Таким образом файл это просто именованная область данных на диске. Ядро обращается к информации по номеру айноды.
Вся информация о файлах в каталоге (директории) хранится в этом же каталоге. В каталоге как в библиотеке. Таким образом каталог это просто файл с информацией. С одной стороны написано имя, а с другой номер айноды. В линукс всё есть файл.


hard link - это просто имя файла в данном каталоге
ln test test_hl - создание хард линка для файла тест (ln что_линкую куда_линкую)
В каталоге в столбике отображается количество хард-линков на файл:
    root@291417:~# ls -li
    total 32
    12605 -rw-r--r-- 1 root root     1 Aug 19  2019 lsblk_raw
    3362 -rw-r--r-- 1 root root 18563 Apr 23 19:31 test-docker.sh
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test_hl  - вот хард линк, айнода 5285 и как у оригинала
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test.txt

stat имя_файла - отображает инфу из айноды

 ln -s test.txt test_sl - создать софт линк
    root@291417:~# ls -li
    total 36
    5264 -rw-r--r-- 1 root root   523 Apr 24 23:50 copy_text.txt
    12605 -rw-r--r-- 1 root root     1 Aug 19  2019 lsblk_raw
    3362 -rw-r--r-- 1 root root 18563 Apr 23 19:31 test-docker.sh
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test_hl
    10556 lrwxrwxrwx 1 root root     8 Apr 24 23:57 test_sl -> test.txt - вот это софт линк
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test.txt

suid бит нужен чтоюы мы могли внести изменения в файл, к которому у нас нет доступа. Например изменить свой пароль (если вы не рут) в файле /etc/shadow
-rwsr-xr-x 1 root root 63736 Jul 27  2018 /usr/bin/passwd - этот бинарный файл является командой для смены пароля пользователя, который хранится в /etc/shadow
Если будет запущен этот файл /usr/bin/passwd, то владелец процесса будет равен владельцу этого файла. Те файл запускается от имени своего владельца, а не от имени того кто его запустил. Это благодаря suid биту.
 chown - смена владельца файла 








