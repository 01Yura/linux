cd директория - переместиться в директорию
    cd -- - вернуться в предыдущую директорию 
    cd ~ - перейти в домашний каталог (можно просто cd без всего)
ls -la - отобразить содержимое директории с правами (-l) и скрытыми файлами (-a) 
    ls -li - отобразить номера inode (файловый дескриптор=inode)
cat файл - отобразить содержимое файла
touch файл - создать файл (по факту сменить время)
less файл - просмотреть файл с возможностью листать
mrdir директория - создать директорию
rm -r директория - удалить даже не пустую директорию
systemctl status процесс - показать статус процесса
    systemctl stop/start процесс- запустить/остановить процесс
apropos слово - ищет описание по ключевому слову 
    apropos -s 1 passwd - найти утилиту смены пароля
    Обратите внимание на число в скобках после имени команды. Это глава или раздел справочного руководства man, в которых может встречаться описание утилиты. Разделов много, приведем самые полезные: 
●	1 — команды пользователя, 
●	2 — системные вызовы ядра (используется программистами), 
●	5 — форматы файлов, 
●	8 — команды администрирования.
whatis команда - выводит инфу о команде
man команда - справка о команде
    /слово - поиск конкретного слова в справке (следующее - n)

/etc/passwd - здесь хранится инфа о пользователях (тут можно сменить домашний каталог)
/etc/group - инфа о группах
/etc/shadow - инфа о паролях

id имя_пользоватля - инфа о uid, gid
аутентификация - проверка существования пользователя и пароля
авторизация - проверка ваших прав на какие-либо действия
adduser имя - добавть юзера
adduser существующий_юзер группа - добавить юзера в группу
sha256 - secure hash algoritm это хэш функция
chmod u/g/o-/+r/w/x файл - изменить права user group or other + or - read write executable, например 
    chmod o+x файл, если не указать никого то права изменятся у пользователя и у группы


> файл- стандартный поток вывода в файл (работает справа налево)
2> файл - стандартный поток ошибок файл
>> файл - перезаписать файл

Данные хранятся на диске. Информация о том где именно на диске хранятся эти данные + права + размер + время создания файла (записи информации на диск  и т.д. хранится в айноде. И эта айнода имеет назавание для нашего удобства - имя файла. Таким образом файл это просто именованная область данных на диске. Ядро обращается к информации по номеру айноды.
Вся информация о файлах в каталоге (директории) хранится в этом же каталоге. В каталоге как в библиотеке. Таким образом каталог это просто файл с информацией. С одной стороны написано имя, а с другой номер айноды. В линукс всё есть файл.


hard link - это просто имя файла в данном каталоге
ln test test_hl - создание хард линка для файла тест (ln что_линкую куда_линкую)
В каталоге в столбике отображается количество хард-линков на файл:
    root@291417:~# ls -li
    total 32
    12605 -rw-r--r-- 1 root root     1 Aug 19  2019 lsblk_raw
    3362 -rw-r--r-- 1 root root 18563 Apr 23 19:31 test-docker.sh
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test_hl  - вот хард линк, айнода 5285 и как у оригинала
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test.txt

stat имя_файла - отображает инфу из айноды

 ln -s test.txt test_sl - создать софт линк
    root@291417:~# ls -li
    total 36
    5264 -rw-r--r-- 1 root root   523 Apr 24 23:50 copy_text.txt
    12605 -rw-r--r-- 1 root root     1 Aug 19  2019 lsblk_raw
    3362 -rw-r--r-- 1 root root 18563 Apr 23 19:31 test-docker.sh
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test_hl
    10556 lrwxrwxrwx 1 root root     8 Apr 24 23:57 test_sl -> test.txt - вот это софт линк
    5258 -rw-r--r-- 2 root root   523 Apr 24 23:16 test.txt

suid бит нужен чтоюы мы могли внести изменения в файл, к которому у нас нет доступа. Например изменить свой пароль (если вы не рут) в файле /etc/shadow
-rwsr-xr-x 1 root root 63736 Jul 27  2018 /usr/bin/passwd - этот бинарный файл является командой для смены пароля пользователя, который хранится в /etc/shadow
Если будет запущен этот файл /usr/bin/passwd, то владелец процесса будет равен владельцу этого файла. Те файл запускается от имени своего владельца, а не от имени того кто его запустил. Это благодаря suid биту.

chown - смена владельца файла 
ps aux - отображает процессы пользовательского пространства и потоки ядра (отображаются в квадратных скобках)
    ps -T -p 4242 - xтобы посмотреть потоки, используйте ключ -T, если хотите посмотреть потоки конкретного процесса, используйте ключ -p
top и htop - утилиты мониторинга процессов

kill -15 PID_процесса
kill -9 PID_процесса - завершить процесс. 
    ●	9 (SIGKILL) — безусловное завершение программы. Сигнал не может быть перехвачен программой, потому позволяет её остановить в любом случае (но не позволит снять процесс-зомби). 
    15 (SIGTERM) — вежливая просьба программе завершить работу. Программа может сохранить данные и т.д.

 tar xvf архивный_файл куда_извлечь - разархивировать архив .tar

Если вам попался пакет rpm (для систем типа Fedora, Mandriva, SUSE и т.д.), его можно сконвертировать в deb с помощью утилиты alien (устанавливается отдельно). Однако делать это рекомендуется лишь в исключительных случаях, когда пакетов deb в доступе нет (например драйверы принтеров Canon на официальном сайте выложены исключительно в rpm).

tar -xvzf архив.tar.gz -C папка_в_которую_надо_разархивировать
    x — дозволяет вам извлекать файлы из архива.
    v — делает вывод tar подробным. Это означает, что на экран будут выведены все выисканные в архиве файлы. Если эта опция опущена, информация, выводимая в процессе обработки, станет ограничена.
    f — является обязательной опцией. Без неё tar пытается использовать магнитную ленту вместо файла картотеки.
    z — позволяет вам обрабатывать архив, сжатый gzip’ом (с расширением .gz). Если вы забудете указать эту функцию, tar выдаст ошибку. И наоборот, эта опция не должна использоваться для несжатых архивов.
 
 unzip архив.zip - разархивировать архив .zip

 Установка программ с собственным инсталлятором
    INSTALL.sh. Если этот файл не захочет запускаться, вероятно, ему не даны права на запуск. Иногда дистрибутив программы распространяется в виде самораспаковывающегося архива. В таком случае это будет просто один-единственный файл .sh, который нужно запустить.
Установка программ из исходных текстов
    Основное, что понадобится — средства для компиляции, для этого сначала нужно установить пакет build­-essential. Дальше нужно распаковать архив с кодами программы во временную папку. Потом нужно найти файл README или INSTALL, прочитать его и выполнить то, что там написано. Чаще установка программ таким способом ограничивается последовательным выполнениям следующих команд:
    ./configure 
    make
    sudo make install

 Системный список репозиториев содержится в файле /etc/apt/sources.list. Чтобы добавить репозиторий,­     отредактируйте файл так:
    sudo nano /etc/apt/sources.list

    Добавьте туда APT-строку. Чем «выше» (ближе к началу файла) стоит строка, тем больший приоритет получит добавленный репозиторий.
    Далее следует обновить список пакетов. Для этого выполните:
    sudo apt­-get update

    sudo apt­-key add ключ_репозитория.key - добавление ключа репозитория

Для хранения логов предусмотрена директория /var/log
Общесистемные логи, как правило, хранятся в файле /var/log/syslog (или в /var/log/messages, например в Centos)
Сообщения ядра хранятся в /var/log/dmesg

tail -f /var/log/syslog - показывает последние строки по мере их появления
tail файл - выводит последние 10 строк
head файл - выводит первые 10 строк

Для запуска системных утилит и других программ служит командный интерпретатор или, как его еще называют, оболочка (shell), основной инструмент системного администратора Linux. Интерпретатор — своего рода язык программирования, позволяющий создавать сложные сценарии (скрипты), также он используется интерактивно для последовательного ввода команд.

cat файл1 файл2 - считывает данные из файлов и выводит их содержимое файлов в единый поток
wc - считает еоличество строк, символов и т.д.

SELinux — система с принудительным контролем доступа. Сложна в настройке, но позволяет с ювелирной точностью настроить те системы, которым критична безопасность

id имя_пользоватля - показывает инфу о пользователе

oga@uho:~$ ls -lL /dev/cdrom 
    brw-rw----+ 1 root cdrom 11, 0 июня   1 13:33 /dev/cdrom                                
    Видно, что права на чтение и запись имеют пользователи, которые входят в группу cdrom.
    Обратите внимание на признак блочного устройства в первой позиции атрибутов. 
    Плюс в конце строчки прав означает, что используются ACL, можно их посмотреть командой getfacl. 

                              Создание пользователей и групп
Создадим группу developer:
# groupadd developer

Создадим двух пользователей — ivanov и petrov:
# useradd -m -G developer -s /bin/bash ivanov
# useradd -m -G developer -s /bin/bash petrov

Мы использовали опции: 
-m — также создать домашний каталог. По умолчанию каталог создаётся в /home с именем учётной записи, например, /home/ivanov. Если надо создать нестандартный каталог, можно указать его, используя параметр параметра -d. 
-G — список групп, к которым принадлежит создаваемый пользователь. По умолчанию также создается персональная группа пользователя с именем учётной записи. Она является первичной и по умолчанию все файлы пользователя создаются с этой группой в качестве группы-владельца. 
-s — задает оболочку пользователя. Для обычных пользователей обычно это /bin/bash. Для ftp/sftp-пользователей и системных псевдопользователей на этом месте указывается псевдооболочка, например, /usr/sbin/nologin или /bin/false. 
Иногда бывает полезным указать номер пользовательского ID явным образом с помощью параметра -u : например, -u 1001. Это бывает полезным, если у вас несколько систем с одинаковыми учетными записями и вы хотите, чтобы при переносе файлов на флешке между ними, у файлов был один владелец. Для этого надо следить, чтобы на системах одинаковые пользователи имели один UID. То же самое для групп: у groupadd есть параметр -g для указания GID. 
По умолчанию для новых учетных записей без пароля заблокирован вход в систему, поэтому установим пароль для пользователей с помощью passwd, например:
# passwd petrov

Есть альтернативный способ создания пользователя.
# adduser smirnov

Предложит несколько вопросов, ответив на которые, мы полностью сконфигурируем будущего пользователя, в том числе и его пароль.
Если нам понадобится изменить параметры для уже созданного пользователя, поможет утилита usermod. Параметры аналогичны утилите useradd. Также её можно использовать для блокировки/разблокировки пользователей. Опция -L позволит заблокировать учётную запись. Операция блокировки добавляет символ «!» в начало пароля в файле /etc/shadow. Параметр -U снимает блокировку. Для удаления учётной записи предназначена утилита userdel. Полезный ключ -r удаляет из системы домашний каталог пользователя. 
   



